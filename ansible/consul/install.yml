---

# Consul will be started in a rootless podman container. 
# Starting and stopping the container will be managed by systemd.
# sudo systemctl --user --machine=consul@.host start/stop/status container-consul.service

# To upgrade Consul run with -e serial=1

- hosts: cluster
  become: yes
  serial: "{{ serial | default(4) }}"

  vars:
    image: 'docker.io/library/consul'
    version: '1.11.4'
    data_center: 'homelab'
    alt_domain: 'homelab'
    
    server_cmd: "agent -bootstrap-expect=3"
    client_cmd: 'agent'

  tasks:
    - name: Check if Consul is running
      become_user: consul
      become: yes
      command: podman exec consul consul version
      register: consul_running
      ignore_errors: yes

    - name: Stop and teardown Consul if running
      import_tasks: teardown.yml
      when: consul_running is success
  
    - name: Create consul user
      user:
        name: consul
        system: yes
        state: present
      register: consul_user

    - name: Enable linger for consul user
      shell:
        cmd: loginctl enable-linger consul
        
    - name: Set subuid and subgid ranges for consul
      ansible.builtin.lineinfile:
        path: "{{ item }}"
        regexp: '^consul:'
        line: "consul:300000:65536"
        state: present
      with_items:
        - "/etc/subuid"
        - "/etc/subgid"
        
    - name: Reboot
      reboot:
      when: consul_user.changed
      
    - name: Create Consul Container
      become_user: consul
      become: yes
      containers.podman.podman_container:
        name: consul
        state: created
        image: "{{ image }}:{{ version }}"
        network: host
        detach: yes
        env:
          CONSUL_LOCAL_CONFIG: "{{ lookup('template', 'templates/config.json.j2', convert_data=True) | to_json }}"
        command: "{{ server_cmd if (hostvars[inventory_hostname].consul_role == 'server') else client_cmd }}"
        generate_systemd:
          time: 60
          path: "/home/consul/.config/systemd/user/"
          
    - name: Open ports required for Consul
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled  
      with_items:
        - 8500/tcp
        - 8600/udp
        - 8600/tcp
        - 8300/tcp
        - 8301-8302/tcp
        - 8301-8302/udp

    - name: Enable and start Consul systemd service
      become_user: consul
      become: yes
      service:
        name: container-consul
        enabled: yes
        state: started
        scope: user

    - name: Wait for Consul to start
      wait_for:
        port: 8500
        state: started

